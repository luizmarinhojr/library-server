import type { NextPage } from 'next';
import styles from '../styles/Home.module.css'
import React, { useState } from 'react';
import ControleEditora from '@/classes/controle/ControleEditora';
import Livro from '@/classes/modelo/Livro';
import Router from 'next/router';
import Head from 'next/head';
import { Menu } from '@/componentes/Menu';


const controleEditora: ControleEditora = new ControleEditora();

const baseURL: string = 'http://localhost:3000/api/livros';

const incluirLivro = async (livro: Livro) => {
    const resposta = await fetch(baseURL, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(livro),
    });
    return resposta.ok;

}

const LivroDados: NextPage = () => {
    const opcoes = controleEditora.getEditoras().map(editora => ({
        value: editora.codEditora,
        text: editora.nome
    }))

    const [titulo, setTitulo] = useState<string>('');
    const [resumo, setResumo] = useState<string>('');
    const [autores, setAutores] = useState<string>('');
    const [codEditora, setCodEditora] = useState<number>(opcoes[0].value);

    const tratarCombo = (evento: React.ChangeEvent<HTMLSelectElement>) => {
        setCodEditora(Number(evento.target.value));
    };

    const incluir = async (evento: React.FormEvent<HTMLFormElement>) => {
        evento.preventDefault();
        const novoLivro: Livro = {
            codigo: 0,
            titulo,
            resumo,
            autores: autores.split('\n'),
            codEditora,
        };
    
        const sucesso = await incluirLivro(novoLivro);
        if (sucesso) {
            Router.push('LivroLista')
        }
    };

    return (
        <>
            <div className={styles.container}>
                <Head>
                    <title>Incluir Livro</title>
                    <meta name="description" content="Generated by create next app" />
                    <meta name="viewport" content="width=device-width, initial-scale=1" />
                    <link rel="icon" href="/favicon.ico" />
                </Head>
                <Menu />
                <main className="container">
                    <h1>Dados do Livro</h1>
                    <form onSubmit={incluir}>
                        <div className="titulo mb-3">
                            <label htmlFor="titulo" className="form-label">TÃ­tulo</label>
                            <input type="text" className="form-control" id="titulo" value={titulo} onChange={(e) => setTitulo(e.target.value)} required></input>
                        </div>

                        <div className="resumo mb-3">
                            <label htmlFor="resumo" className="form-label">Resumo</label>
                            <textarea className="form-control" id="resumo" value={resumo} onChange={(e) => setResumo(e.target.value)} required></textarea>
                        </div>
                        
                        <div className="editora mb-3">
                            <label htmlFor="editora" className="form-label">Editora</label>
                            <select id="editora" className="form-select" value={codEditora} onChange={tratarCombo}>
                                {opcoes.map(opcao => (
                                    <option key={opcao.value} value={opcao.value}>{opcao.text}</option>
                                ))}
                            </select>
                        </div>
                    
                        <div className="autores mb-3">
                            <label htmlFor="autores" className="form-label">Autores (1 por linha)</label>
                            <textarea className="form-control mb-3" id="autores" value={autores} onChange={(e) => setAutores(e.target.value)} required></textarea>
                        </div>

                        <button type="submit" className="btn btn-primary">Salvar Dados</button>
                    </form>
                </main>
            </div>
        </>
    );
}

export default LivroDados;